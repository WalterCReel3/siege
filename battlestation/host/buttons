#!/usr/bin/env python
#
# Handles button presses on the Siege battlestation and sends events to the
# Seige server.

import sys
import logging
import contextlib
import termios
import time

class Buttons(object):
    def __init__(self):
        self._logger = logging.getLogger(type(self).__name__)

    @contextlib.contextmanager
    def _non_blocking_term(self, f, echo=True):
        fd = f.fileno()
        old_attr = termios.tcgetattr(fd)
        new_attr = termios.tcgetattr(fd)
        new_attr[3] = new_attr[3] & ~termios.ICANON
        if not echo:
            new_attr[3] = new_attr[3] & ~termios.ECHO
        new_attr[6][termios.VMIN] = 0
        new_attr[6][termios.VTIME] = 0
        try:
            termios.tcsetattr(fd, termios.TCSANOW, new_attr)
            yield
        finally:
            termios.tcsetattr(fd, termios.TCSAFLUSH, old_attr)

    def run(self):
        with self._non_blocking_term(sys.stdin, echo=False):
            while True:
                c = sys.stdin.read(1)
                if c:
                    self._handle_key(c)

            # Small sleep so we don't burn down the house
            time.sleep(0.001)

    def _handle_key(self, key):
        self._logger.debug('%s', key)

# Does the thing
def main():
    logging.basicConfig(level=logging.DEBUG)
    logger = logging.getLogger()

    buttons = Buttons()
    buttons.run()


if __name__ == "__main__":
    main()
